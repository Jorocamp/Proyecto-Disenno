/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;



import Controladores.Controlador;
import Controladores.ControladorSimulador;
import Modelos.Edificio;
import Modelos.Simulador;
import Vistas.Utilidades.BitacoraRenderer;
import java.awt.BorderLayout;
import javax.swing.JFileChooser;
import java.io.File;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author MICHA
 */
public class VistaGUI extends javax.swing.JFrame implements Vista{
    
    //Se crea un array para almacenar las probabilidades
    private ArrayList<JSpinner> p1Lista = new ArrayList<>();
    private ArrayList<JSpinner> p2Lista = new ArrayList<>();
    
    
    private ArrayList<JSpinner> p3Lista = new ArrayList<>();
    private ArrayList<JSpinner> p4Lista = new ArrayList<>();
    
    private ArrayList<JSpinner> utPuertasLista = new ArrayList<>();
    private ArrayList<JSpinner> utPisosLista = new ArrayList<>();
    private ArrayList<JSpinner> maxPersonasLista = new ArrayList<>();   
    
    private ArrayList<JTextField> pisoActualLista  = new ArrayList<>();
    private ArrayList<JTextField> direccionesLista  = new ArrayList<>();
    private ArrayList<JTextField> numeroPasajerosLista  = new ArrayList<>();

    
    private boolean pisosInit = false;
    private boolean elevadoresInit = false;
    
    private boolean simPausa = false;
    
    private ControladorSimulador controlador = new ControladorSimulador();
    

    /**
     * Creates new form VistaGUI
     */
    public VistaGUI() {
        initComponents();
        
        //Inicio
        btn_iniciarS.setEnabled(false);
        btn_guardarA.setEnabled(false);
        btn_fin.setEnabled(false);
        btn_stop.setEnabled(false);
        configSpinner(spn_nPisos,256);
        configSpinner(spn_nElevadores, Integer.MAX_VALUE);
        
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_scrPrincipal = new javax.swing.JScrollPane();
        pnl_principal = new javax.swing.JPanel();
        bnr_sceTitle = new javax.swing.JLabel();
        lbl_welcome = new javax.swing.JLabel();
        img_ssce = new javax.swing.JLabel();
        btn_cargarA = new javax.swing.JButton();
        btn_configS = new javax.swing.JButton();
        btn_guardarA = new javax.swing.JButton();
        lbl_warning = new javax.swing.JLabel();
        img_warning = new javax.swing.JLabel();
        btn_iniciarS = new javax.swing.JButton();
        pnl_scrConfig = new javax.swing.JScrollPane();
        pnl_config = new javax.swing.JPanel();
        bnr_configTitle = new javax.swing.JLabel();
        lbl_nPisos = new javax.swing.JLabel();
        btn_nPisos = new javax.swing.JButton();
        spn_nPisos = new javax.swing.JSpinner();
        pnl_configP1 = new javax.swing.JScrollPane();
        pnl_listaP1 = new javax.swing.JPanel();
        lbl_p1 = new javax.swing.JLabel();
        lbl_p2 = new javax.swing.JLabel();
        pnl_configP2 = new javax.swing.JScrollPane();
        pnl_listaP2 = new javax.swing.JPanel();
        lbl_nElevadores = new javax.swing.JLabel();
        spn_nElevadores = new javax.swing.JSpinner();
        sep_num1 = new javax.swing.JSeparator();
        btn_nElevadores = new javax.swing.JButton();
        pnl_utPuertas = new javax.swing.JScrollPane();
        pnl_listaPuertas = new javax.swing.JPanel();
        pnl_configP3 = new javax.swing.JScrollPane();
        pnl_listaP3 = new javax.swing.JPanel();
        pnl_configP4 = new javax.swing.JScrollPane();
        pnl_listaP4 = new javax.swing.JPanel();
        pnl_maxPersonas = new javax.swing.JScrollPane();
        pnl_listaMaxP = new javax.swing.JPanel();
        pnl_utPisos = new javax.swing.JScrollPane();
        pnl_listaPisos = new javax.swing.JPanel();
        lbl_p3 = new javax.swing.JLabel();
        lbl_p4 = new javax.swing.JLabel();
        lbl_p5 = new javax.swing.JLabel();
        lbl_p6 = new javax.swing.JLabel();
        lbl_p8 = new javax.swing.JLabel();
        btn_volver = new javax.swing.JButton();
        btn_fin = new javax.swing.JButton();
        pnl_scrSimulacion = new javax.swing.JScrollPane();
        pnl_simulacion = new javax.swing.JPanel();
        bnr_sceTitle1 = new javax.swing.JLabel();
        btn_start = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_stop = new javax.swing.JButton();
        btn_config = new javax.swing.JButton();
        txt_utContador = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_speeddown = new javax.swing.JButton();
        btn_speedup = new javax.swing.JButton();
        lbl_veocidadA = new javax.swing.JLabel();
        txt_velocidadA = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        pnl_bitacora = new javax.swing.JScrollPane();
        lst_bitacora = new javax.swing.JList<>();
        lbl_bitacora = new javax.swing.JLabel();
        pnl_pisoActual = new javax.swing.JScrollPane();
        pnl_listaPisoActual = new javax.swing.JPanel();
        lbl_pisoActual = new javax.swing.JLabel();
        pnl_direccion = new javax.swing.JScrollPane();
        pnl_listaDireccion = new javax.swing.JPanel();
        lbl_direccion = new javax.swing.JLabel();
        pnl_numPasajeros = new javax.swing.JScrollPane();
        pnl_listaNumPasajeros = new javax.swing.JPanel();
        lbl_numPasajeros = new javax.swing.JLabel();
        lbl_Pasajeros = new javax.swing.JLabel();
        lbl_filtrar = new javax.swing.JLabel();
        chk_cb01 = new javax.swing.JCheckBox();
        chk_cb02 = new javax.swing.JCheckBox();
        chk_cb03 = new javax.swing.JCheckBox();
        chk_cb04 = new javax.swing.JCheckBox();
        chk_cb05 = new javax.swing.JCheckBox();
        chk_cb06 = new javax.swing.JCheckBox();
        chk_cb07 = new javax.swing.JCheckBox();
        chk_cb08 = new javax.swing.JCheckBox();
        chk_cb09 = new javax.swing.JCheckBox();
        chk_cb10 = new javax.swing.JCheckBox();
        chk_cb11 = new javax.swing.JCheckBox();
        pnl_Pasajeros = new javax.swing.JScrollPane();
        lst_Pasajeros = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SSCE");
        setPreferredSize(new java.awt.Dimension(1167, 500));
        getContentPane().setLayout(new java.awt.CardLayout());

        pnl_principal.setBackground(new java.awt.Color(255, 255, 255));

        bnr_sceTitle.setBackground(new java.awt.Color(51, 51, 51));
        bnr_sceTitle.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        bnr_sceTitle.setForeground(new java.awt.Color(255, 255, 255));
        bnr_sceTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bnr_sceTitle.setText("SSCE (Simulador de Sistema de Control de Elevadores)");
        bnr_sceTitle.setOpaque(true);

        lbl_welcome.setFont(new java.awt.Font("Georgia", 2, 36)); // NOI18N
        lbl_welcome.setForeground(new java.awt.Color(153, 153, 153));
        lbl_welcome.setText("¡Bienvenido!");

        img_ssce.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        img_ssce.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logoSSCE50.PNG"))); // NOI18N
        img_ssce.setFocusCycleRoot(true);

        btn_cargarA.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btn_cargarA.setText("Cargar archivo de configuración");
        btn_cargarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cargarAActionPerformed(evt);
            }
        });

        btn_configS.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btn_configS.setText("Configurar simulador");
        btn_configS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_configSActionPerformed(evt);
            }
        });

        btn_guardarA.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        btn_guardarA.setText("Guardar archivo de configuración");
        btn_guardarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarAActionPerformed(evt);
            }
        });

        lbl_warning.setFont(new java.awt.Font("Georgia", 0, 11)); // NOI18N
        lbl_warning.setForeground(new java.awt.Color(102, 102, 102));
        lbl_warning.setText("Se debe configurar el simulador antes de comenzar");

        img_warning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/warning.png"))); // NOI18N

        btn_iniciarS.setText("Iniciar simulador");
        btn_iniciarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_iniciarSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_principalLayout = new javax.swing.GroupLayout(pnl_principal);
        pnl_principal.setLayout(pnl_principalLayout);
        pnl_principalLayout.setHorizontalGroup(
            pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bnr_sceTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_principalLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbl_welcome))
                    .addGroup(pnl_principalLayout.createSequentialGroup()
                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_principalLayout.createSequentialGroup()
                                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btn_guardarA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pnl_principalLayout.createSequentialGroup()
                                        .addComponent(img_ssce)
                                        .addGap(308, 308, 308))
                                    .addComponent(btn_configS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 375, Short.MAX_VALUE)
                                .addComponent(img_warning))
                            .addGroup(pnl_principalLayout.createSequentialGroup()
                                .addComponent(btn_cargarA, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_warning)
                            .addComponent(btn_iniciarS, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        pnl_principalLayout.setVerticalGroup(
            pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bnr_sceTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_principalLayout.createSequentialGroup()
                        .addComponent(img_ssce)
                        .addGap(18, 18, 18)
                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_configS, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_iniciarS, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btn_guardarA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_cargarA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_principalLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(img_warning)
                            .addComponent(lbl_warning))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 320, Short.MAX_VALUE)
                .addComponent(lbl_welcome)
                .addContainerGap())
        );

        pnl_scrPrincipal.setViewportView(pnl_principal);

        getContentPane().add(pnl_scrPrincipal, "card5");

        pnl_config.setBackground(new java.awt.Color(255, 255, 255));

        bnr_configTitle.setBackground(new java.awt.Color(51, 51, 51));
        bnr_configTitle.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        bnr_configTitle.setForeground(new java.awt.Color(255, 255, 255));
        bnr_configTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bnr_configTitle.setText("Configuración");
        bnr_configTitle.setOpaque(true);

        lbl_nPisos.setText("Número de pisos");

        btn_nPisos.setText("Aceptar");
        btn_nPisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nPisosActionPerformed(evt);
            }
        });

        spn_nPisos.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnl_listaP1Layout = new javax.swing.GroupLayout(pnl_listaP1);
        pnl_listaP1.setLayout(pnl_listaP1Layout);
        pnl_listaP1Layout.setHorizontalGroup(
            pnl_listaP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnl_listaP1Layout.setVerticalGroup(
            pnl_listaP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
        );

        pnl_configP1.setViewportView(pnl_listaP1);

        lbl_p1.setText("Probabilidad de solicitud:");

        lbl_p2.setText("Probabilidad de destino:");

        javax.swing.GroupLayout pnl_listaP2Layout = new javax.swing.GroupLayout(pnl_listaP2);
        pnl_listaP2.setLayout(pnl_listaP2Layout);
        pnl_listaP2Layout.setHorizontalGroup(
            pnl_listaP2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnl_listaP2Layout.setVerticalGroup(
            pnl_listaP2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
        );

        pnl_configP2.setViewportView(pnl_listaP2);

        lbl_nElevadores.setText("Número de elevadores");

        spn_nElevadores.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        sep_num1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btn_nElevadores.setText("Aceptar");
        btn_nElevadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nElevadoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_listaPuertasLayout = new javax.swing.GroupLayout(pnl_listaPuertas);
        pnl_listaPuertas.setLayout(pnl_listaPuertasLayout);
        pnl_listaPuertasLayout.setHorizontalGroup(
            pnl_listaPuertasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnl_listaPuertasLayout.setVerticalGroup(
            pnl_listaPuertasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 317, Short.MAX_VALUE)
        );

        pnl_utPuertas.setViewportView(pnl_listaPuertas);

        javax.swing.GroupLayout pnl_listaP3Layout = new javax.swing.GroupLayout(pnl_listaP3);
        pnl_listaP3.setLayout(pnl_listaP3Layout);
        pnl_listaP3Layout.setHorizontalGroup(
            pnl_listaP3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnl_listaP3Layout.setVerticalGroup(
            pnl_listaP3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
        );

        pnl_configP3.setViewportView(pnl_listaP3);

        javax.swing.GroupLayout pnl_listaP4Layout = new javax.swing.GroupLayout(pnl_listaP4);
        pnl_listaP4.setLayout(pnl_listaP4Layout);
        pnl_listaP4Layout.setHorizontalGroup(
            pnl_listaP4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnl_listaP4Layout.setVerticalGroup(
            pnl_listaP4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
        );

        pnl_configP4.setViewportView(pnl_listaP4);

        javax.swing.GroupLayout pnl_listaMaxPLayout = new javax.swing.GroupLayout(pnl_listaMaxP);
        pnl_listaMaxP.setLayout(pnl_listaMaxPLayout);
        pnl_listaMaxPLayout.setHorizontalGroup(
            pnl_listaMaxPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnl_listaMaxPLayout.setVerticalGroup(
            pnl_listaMaxPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
        );

        pnl_maxPersonas.setViewportView(pnl_listaMaxP);

        javax.swing.GroupLayout pnl_listaPisosLayout = new javax.swing.GroupLayout(pnl_listaPisos);
        pnl_listaPisos.setLayout(pnl_listaPisosLayout);
        pnl_listaPisosLayout.setHorizontalGroup(
            pnl_listaPisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnl_listaPisosLayout.setVerticalGroup(
            pnl_listaPisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
        );

        pnl_utPisos.setViewportView(pnl_listaPisos);

        lbl_p3.setText("Probabilidad detener elevador:");

        lbl_p4.setText("Probabilidad emergencia:");

        lbl_p5.setText("UT entre pisos:");

        lbl_p6.setText("UT puertas abiertas y al detenerse:");

        lbl_p8.setText("Máxima cantidad de personas:");

        btn_volver.setBackground(new java.awt.Color(255, 153, 153));
        btn_volver.setText("Volver");
        btn_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_volverActionPerformed(evt);
            }
        });

        btn_fin.setBackground(new java.awt.Color(153, 255, 153));
        btn_fin.setText("Finalizar");
        btn_fin.setToolTipText("");
        btn_fin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_finActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_configLayout = new javax.swing.GroupLayout(pnl_config);
        pnl_config.setLayout(pnl_configLayout);
        pnl_configLayout.setHorizontalGroup(
            pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_configLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bnr_configTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_configLayout.createSequentialGroup()
                        .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_configLayout.createSequentialGroup()
                                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_p2)
                                    .addComponent(pnl_configP2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_p1)
                                    .addComponent(pnl_configP1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(145, 145, 145)
                                .addComponent(sep_num1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_nPisos)
                            .addGroup(pnl_configLayout.createSequentialGroup()
                                .addComponent(spn_nPisos, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_nPisos)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_configLayout.createSequentialGroup()
                                .addComponent(lbl_p3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_nElevadores)
                                    .addGroup(pnl_configLayout.createSequentialGroup()
                                        .addComponent(spn_nElevadores, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_nElevadores))))
                            .addGroup(pnl_configLayout.createSequentialGroup()
                                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pnl_configP3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pnl_configP4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_p4)
                                    .addComponent(pnl_utPisos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_p5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_configLayout.createSequentialGroup()
                                            .addComponent(lbl_p6)
                                            .addGap(129, 129, 129))
                                        .addComponent(pnl_utPuertas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pnl_maxPersonas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbl_p8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_configLayout.createSequentialGroup()
                                        .addComponent(btn_volver, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_fin, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        pnl_configLayout.setVerticalGroup(
            pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_configLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(bnr_configTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nPisos)
                    .addComponent(lbl_nElevadores))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_configLayout.createSequentialGroup()
                        .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(spn_nElevadores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_nPisos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_nPisos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_nElevadores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_p3))
                        .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnl_configLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pnl_configP3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(lbl_p4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnl_configP4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_p5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnl_utPisos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnl_configLayout.createSequentialGroup()
                                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnl_configLayout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(lbl_p1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pnl_configP1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(lbl_p2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pnl_configP2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnl_configLayout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addComponent(lbl_p6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pnl_utPuertas, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbl_p8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pnl_maxPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(9, 9, 9)
                                .addGroup(pnl_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn_volver, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_fin)))))
                    .addComponent(sep_num1))
                .addContainerGap())
        );

        pnl_scrConfig.setViewportView(pnl_config);

        getContentPane().add(pnl_scrConfig, "card5");

        pnl_simulacion.setBackground(new java.awt.Color(255, 255, 255));

        bnr_sceTitle1.setBackground(new java.awt.Color(51, 51, 51));
        bnr_sceTitle1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        bnr_sceTitle1.setForeground(new java.awt.Color(255, 255, 255));
        bnr_sceTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bnr_sceTitle1.setText("Simulación");
        bnr_sceTitle1.setOpaque(true);

        btn_start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/play.png"))); // NOI18N
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });

        btn_next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/next.png"))); // NOI18N
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/stop.png"))); // NOI18N
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });

        btn_config.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/config.png"))); // NOI18N
        btn_config.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_configActionPerformed(evt);
            }
        });

        txt_utContador.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txt_utContador.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_utContador.setText("0");
        txt_utContador.setEnabled(false);
        txt_utContador.setSelectionColor(new java.awt.Color(102, 102, 102));
        txt_utContador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_utContadorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel1.setText("UT Actual");

        btn_speeddown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/speeddown.png"))); // NOI18N
        btn_speeddown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_speeddownActionPerformed(evt);
            }
        });

        btn_speedup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/speedup.png"))); // NOI18N
        btn_speedup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_speedupActionPerformed(evt);
            }
        });

        lbl_veocidadA.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbl_veocidadA.setText("Velocidad Actual");

        txt_velocidadA.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txt_velocidadA.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_velocidadA.setText("0");
        txt_velocidadA.setEnabled(false);
        txt_velocidadA.setSelectionColor(new java.awt.Color(102, 102, 102));
        txt_velocidadA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_velocidadAActionPerformed(evt);
            }
        });

        lst_bitacora.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        lst_bitacora.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "CB01", "CB02", "CB03", "CB04", "CB05", "CB06", "CB07", "CB08", "CB09", "CB10", "CB11" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        pnl_bitacora.setViewportView(lst_bitacora);

        lbl_bitacora.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbl_bitacora.setText("Bitácora");

        javax.swing.GroupLayout pnl_listaPisoActualLayout = new javax.swing.GroupLayout(pnl_listaPisoActual);
        pnl_listaPisoActual.setLayout(pnl_listaPisoActualLayout);
        pnl_listaPisoActualLayout.setHorizontalGroup(
            pnl_listaPisoActualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
        );
        pnl_listaPisoActualLayout.setVerticalGroup(
            pnl_listaPisoActualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );

        pnl_pisoActual.setViewportView(pnl_listaPisoActual);

        lbl_pisoActual.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbl_pisoActual.setText("Piso Actual");

        javax.swing.GroupLayout pnl_listaDireccionLayout = new javax.swing.GroupLayout(pnl_listaDireccion);
        pnl_listaDireccion.setLayout(pnl_listaDireccionLayout);
        pnl_listaDireccionLayout.setHorizontalGroup(
            pnl_listaDireccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
        );
        pnl_listaDireccionLayout.setVerticalGroup(
            pnl_listaDireccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );

        pnl_direccion.setViewportView(pnl_listaDireccion);

        lbl_direccion.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbl_direccion.setText("Direccion Actual/Prevista");

        javax.swing.GroupLayout pnl_listaNumPasajerosLayout = new javax.swing.GroupLayout(pnl_listaNumPasajeros);
        pnl_listaNumPasajeros.setLayout(pnl_listaNumPasajerosLayout);
        pnl_listaNumPasajerosLayout.setHorizontalGroup(
            pnl_listaNumPasajerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
        );
        pnl_listaNumPasajerosLayout.setVerticalGroup(
            pnl_listaNumPasajerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );

        pnl_numPasajeros.setViewportView(pnl_listaNumPasajeros);

        lbl_numPasajeros.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbl_numPasajeros.setText("Número de pasajeros");

        lbl_Pasajeros.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbl_Pasajeros.setText("Detalles pasajeros");

        lbl_filtrar.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbl_filtrar.setText("Filtrar bitácora");

        chk_cb01.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb01.setSelected(true);
        chk_cb01.setText("CB01: Solicitud de elevador");
        chk_cb01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb01ActionPerformed(evt);
            }
        });

        chk_cb02.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb02.setSelected(true);
        chk_cb02.setText("CB02: Salir de elevador");
        chk_cb02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb02ActionPerformed(evt);
            }
        });

        chk_cb03.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb03.setSelected(true);
        chk_cb03.setText("CB03: Entrar a elevador");
        chk_cb03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb03ActionPerformed(evt);
            }
        });

        chk_cb04.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb04.setSelected(true);
        chk_cb04.setText("CB04: Botón destino");
        chk_cb04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb04ActionPerformed(evt);
            }
        });

        chk_cb05.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb05.setSelected(true);
        chk_cb05.setText("CB05: Luces");
        chk_cb05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb05ActionPerformed(evt);
            }
        });

        chk_cb06.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb06.setSelected(true);
        chk_cb06.setText("CB06: Sensor piso");
        chk_cb06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb06ActionPerformed(evt);
            }
        });

        chk_cb07.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb07.setSelected(true);
        chk_cb07.setText("CB07: Calendarizador");
        chk_cb07.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb07ActionPerformed(evt);
            }
        });

        chk_cb08.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb08.setSelected(true);
        chk_cb08.setText("CB08: Puertas");
        chk_cb08.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb08ActionPerformed(evt);
            }
        });

        chk_cb09.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb09.setSelected(true);
        chk_cb09.setText("CB09: Emergencia");
        chk_cb09.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb09ActionPerformed(evt);
            }
        });

        chk_cb10.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb10.setSelected(true);
        chk_cb10.setText("CB10: Detener");
        chk_cb10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb10ActionPerformed(evt);
            }
        });

        chk_cb11.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        chk_cb11.setSelected(true);
        chk_cb11.setText("CB11: Máxima capacidad");
        chk_cb11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_cb11ActionPerformed(evt);
            }
        });

        pnl_Pasajeros.setViewportView(lst_Pasajeros);

        javax.swing.GroupLayout pnl_simulacionLayout = new javax.swing.GroupLayout(pnl_simulacion);
        pnl_simulacion.setLayout(pnl_simulacionLayout);
        pnl_simulacionLayout.setHorizontalGroup(
            pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_simulacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_simulacionLayout.createSequentialGroup()
                        .addComponent(chk_cb11, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bnr_sceTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_simulacionLayout.createSequentialGroup()
                        .addComponent(btn_speeddown, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_start, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_speedup, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_config, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnl_simulacionLayout.createSequentialGroup()
                                .addComponent(lbl_veocidadA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_velocidadA, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnl_simulacionLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_utContador, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_simulacionLayout.createSequentialGroup()
                        .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_bitacora)
                            .addComponent(chk_cb01, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_filtrar)
                            .addComponent(chk_cb02, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb03, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb04, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb05, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb06, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb07, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb08, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb09, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chk_cb10, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnl_bitacora, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_Pasajeros)
                            .addGroup(pnl_simulacionLayout.createSequentialGroup()
                                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pnl_pisoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_pisoActual))
                                .addGap(18, 18, 18)
                                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pnl_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_direccion))
                                .addGap(18, 18, 18)
                                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_numPasajeros)
                                    .addComponent(pnl_numPasajeros, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(pnl_Pasajeros))))
                .addContainerGap())
        );
        pnl_simulacionLayout.setVerticalGroup(
            pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_simulacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bnr_sceTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_stop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_config, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_utContador, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_speeddown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_speedup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_veocidadA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_velocidadA, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_bitacora)
                    .addComponent(lbl_pisoActual)
                    .addComponent(lbl_direccion)
                    .addComponent(lbl_numPasajeros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl_pisoActual)
                    .addComponent(pnl_bitacora)
                    .addComponent(pnl_direccion)
                    .addComponent(pnl_numPasajeros))
                .addGap(26, 26, 26)
                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Pasajeros)
                    .addComponent(lbl_filtrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_simulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_simulacionLayout.createSequentialGroup()
                        .addComponent(chk_cb01)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb02)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb03)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb04)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb05)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb06)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb07)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb08)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb09)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chk_cb10))
                    .addComponent(pnl_Pasajeros, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chk_cb11)
                .addGap(73, 73, 73))
        );

        pnl_scrSimulacion.setViewportView(pnl_simulacion);

        getContentPane().add(pnl_scrSimulacion, "card5");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cargarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cargarAActionPerformed
        // TODO add your handling code here:
        
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.json, *.txt, *.xml", "json", "txt", "xml");
        JFileChooser fc = new JFileChooser();
        fc.setAcceptAllFileFilterUsed(false);
        
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Se abre el archivo
            File file = fc.getSelectedFile();
            //Aqui se valida
            JOptionPane.showMessageDialog(this, "Archivo de configuración cargado correctamente", "¡Ok!", JOptionPane.INFORMATION_MESSAGE);
            //Se cambian aspectos de la interfaz
            lbl_warning.setVisible(false);
            img_warning.setVisible(false);
            btn_iniciarS.setEnabled(true);
            btn_guardarA.setEnabled(true);
        } else {
            //accion cancelada
        }
    }//GEN-LAST:event_btn_cargarAActionPerformed

    private void btn_configSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_configSActionPerformed
        pnl_scrPrincipal.setVisible(false);
        pnl_scrConfig.setVisible(true);
        
    }//GEN-LAST:event_btn_configSActionPerformed

    private void btn_guardarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarAActionPerformed
        JFileChooser fc = new JFileChooser();
        
        //Filtro para tipos de archivos
        FileNameExtensionFilter filterJSON = new FileNameExtensionFilter("JSON File", "json");
        FileNameExtensionFilter filterTXT = new FileNameExtensionFilter("TXT File", "txt"); 
        FileNameExtensionFilter filterXML = new FileNameExtensionFilter("XML File", "xml"); 
        fc.setAcceptAllFileFilterUsed(false);
        fc.setFileFilter(filterJSON);
        fc.setFileFilter(filterTXT);
        fc.setFileFilter(filterXML);
        //-----------------------------------------------
        
        int returnVal = fc.showSaveDialog(this);
        File file = null;
        if (returnVal != JFileChooser.APPROVE_OPTION) {
            return;
        }
        file = fc.getSelectedFile();
     
        if (fc.getFileFilter().equals(filterTXT)) {
            System.out.println(file.getPath()+".txt");
            //Guardar como txt
        }
        if (fc.getFileFilter().equals(filterJSON)) {
            //Guardar como json
            System.out.println(file.getPath()+".json");
        }
        if (fc.getFileFilter().equals(filterXML)) {
            //Guardar como xml
            System.out.println(file.getPath()+".xml");
        }



    }//GEN-LAST:event_btn_guardarAActionPerformed

    private void btn_nPisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nPisosActionPerformed
        // TODO add your handling code here:
        
        //Probabilidad de Pisos
        int numPisos = (Integer) spn_nPisos.getValue(); 
        crearProbabilidad1(numPisos);
        crearProbabilidad2(numPisos);
        
        
        if(elevadoresInit)
            btn_fin.setEnabled(true);
        
        pisosInit = true;
        
    }//GEN-LAST:event_btn_nPisosActionPerformed

    private void btn_nElevadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nElevadoresActionPerformed
        // TODO add your handling code here:
        int numElevadores = (Integer) spn_nElevadores.getValue(); 
        crearProbabilidad3(numElevadores);
        crearProbabilidad4(numElevadores);
        
        crearUTPisos(numElevadores);
        crearUTPuertas(numElevadores);
        crearMaxPersonas(numElevadores);
        
        crearPisoActual(numElevadores);
        crearDireccionE(numElevadores);
        crearNumPersonas(numElevadores);
        
        
        if(pisosInit)
            btn_fin.setEnabled(true);
        
        elevadoresInit = true;
    }//GEN-LAST:event_btn_nElevadoresActionPerformed

    private void btn_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_volverActionPerformed
        // TODO add your handling code here:
        pnl_scrConfig.setVisible(false);
        pnl_scrPrincipal.setVisible(true);
    }//GEN-LAST:event_btn_volverActionPerformed

    private void btn_finActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_finActionPerformed
        // TODO add your handling code here:
        

        ControladorSimulador controlador = new ControladorSimulador();

        if(validarProbabilidadDestino()){
                
            Simulador simulador = new Simulador(new Edificio(null, null), 0, 0, 0, false,false,false);
            controlador.setSimulador(simulador);
            ArrayList<Object> arrayParametros = new ArrayList<Object>();


            int cantPisos = (Integer) spn_nPisos.getValue();
            arrayParametros.add(cantPisos);

            ArrayList<Float> arrayListProbSolicitud = new ArrayList<Float>();

            ArrayList<Float> arrayListProbDestino = new ArrayList<Float>();

            ArrayList<Float> arrayListProbBoton = new ArrayList<Float>();

            ArrayList<Float> arrayListProbPalanca = new ArrayList<Float>();

            ArrayList<Integer> arrayListUTMovimiento = new ArrayList<Integer>();

            ArrayList<Integer> arrayListUTPuertas = new ArrayList<Integer>();

            ArrayList<Integer> arrayListCantidadPersonas = new ArrayList<Integer>();

            for(int i = 0; i<cantPisos; i++){
                arrayListProbSolicitud.add((Float) p1Lista.get(i).getValue());
                arrayListProbDestino.add((Float) p2Lista.get(i).getValue());
            }

            int cantElev = (Integer) spn_nElevadores.getValue();

            for(int i = 0; i<cantElev; i++){
                arrayListProbBoton.add((Float) p3Lista.get(i).getValue());
                arrayListProbPalanca.add((Float) p4Lista.get(i).getValue());
                arrayListUTMovimiento.add((Integer) utPuertasLista.get(i).getValue());
                arrayListUTPuertas.add((Integer) utPisosLista.get(i).getValue());
                arrayListCantidadPersonas.add((Integer) maxPersonasLista.get(i).getValue());
            }
        

            arrayParametros.add(arrayListProbSolicitud);
            arrayParametros.add(arrayListProbDestino);
            arrayParametros.add(arrayListProbBoton);
            arrayParametros.add(arrayListProbPalanca);
            arrayParametros.add(arrayListUTMovimiento);
            arrayParametros.add(arrayListUTPuertas);
            arrayParametros.add(arrayListCantidadPersonas);
        
            
        controlador.configurarSimulacion(arrayParametros);

        
        //VALIDACIONES AQUI
        JOptionPane.showMessageDialog(this, "Datos registrados correctamente (ahora es posible guardar la configuración actual)", "¡Ok!", JOptionPane.INFORMATION_MESSAGE);
            //Se cambian aspectos de la interfaz

            
            pnl_scrConfig.setVisible(false);
            pnl_scrPrincipal.setVisible(true);
            lbl_warning.setVisible(false);
            img_warning.setVisible(false);
            btn_iniciarS.setEnabled(true);
            btn_guardarA.setEnabled(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Probabilidad de destino de los pisos no es igual a 1\n Por favor corregir este detalle", "¡Error!", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btn_finActionPerformed

    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        // TODO add your handling code here:
        btn_stop.setEnabled(true);
        btn_config.setEnabled(false);
        if(simPausa){
            btn_start.setIcon(new ImageIcon("src/Imagenes/play.png"));
            btn_next.setEnabled(true);            
            simPausa = false;
        }
        else{
            btn_start.setIcon(new ImageIcon("src/Imagenes/pause.png"));
            btn_next.setEnabled(false);
            simPausa = true;
        }

        
    }//GEN-LAST:event_btn_startActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed
        // TODO add your handling code here:
         btn_start.setEnabled(false);
         btn_next.setEnabled(false);
         btn_speeddown.setEnabled(false);
         btn_speedup.setEnabled(false);
         btn_config.setEnabled(true);
    }//GEN-LAST:event_btn_stopActionPerformed

    private void btn_iniciarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_iniciarSActionPerformed
        pnl_scrPrincipal.setVisible(false);
        pnl_scrSimulacion.setVisible(true);
        btn_start.setEnabled(true);
        btn_next.setEnabled(false);
        btn_config.setEnabled(true);
        btn_stop.setEnabled(false);
        btn_speeddown.setEnabled(true);
        btn_speedup.setEnabled(true);
         
        btn_start.setIcon(new ImageIcon("src/Imagenes/play.png"));
        
        lst_bitacora.setCellRenderer(new BitacoraRenderer());
        
    }//GEN-LAST:event_btn_iniciarSActionPerformed

    private void btn_configActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_configActionPerformed
        // TODO add your handling code here:
          btn_iniciarS.setEnabled(false);
          lbl_warning.setVisible(true);
          img_warning.setVisible(true);
          pnl_scrPrincipal.setVisible(true);
          pnl_scrSimulacion.setVisible(false);
    }//GEN-LAST:event_btn_configActionPerformed

    private void txt_utContadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_utContadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_utContadorActionPerformed

    private void btn_speeddownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_speeddownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_speeddownActionPerformed

    private void btn_speedupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_speedupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_speedupActionPerformed

    private void txt_velocidadAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_velocidadAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_velocidadAActionPerformed

    private void chk_cb01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb01ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb01ActionPerformed

    private void chk_cb02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb02ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb02ActionPerformed

    private void chk_cb03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb03ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb03ActionPerformed

    private void chk_cb04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb04ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb04ActionPerformed

    private void chk_cb05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb05ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb05ActionPerformed

    private void chk_cb06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb06ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb06ActionPerformed

    private void chk_cb07ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb07ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb07ActionPerformed

    private void chk_cb08ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb08ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb08ActionPerformed

    private void chk_cb09ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb09ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb09ActionPerformed

    private void chk_cb10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb10ActionPerformed

    private void chk_cb11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_cb11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_cb11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaGUI().setVisible(true);
                
                
            }
        });
        
    }

    /*@Override
    public void inicioSimulador() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
*/
    @Override
    public void getConfiguracion() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    
    
    //Funciones propias
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bnr_configTitle;
    private javax.swing.JLabel bnr_sceTitle;
    private javax.swing.JLabel bnr_sceTitle1;
    private javax.swing.JButton btn_cargarA;
    private javax.swing.JButton btn_config;
    private javax.swing.JButton btn_configS;
    private javax.swing.JButton btn_fin;
    private javax.swing.JButton btn_guardarA;
    private javax.swing.JButton btn_iniciarS;
    private javax.swing.JButton btn_nElevadores;
    private javax.swing.JButton btn_nPisos;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_speeddown;
    private javax.swing.JButton btn_speedup;
    private javax.swing.JButton btn_start;
    private javax.swing.JButton btn_stop;
    private javax.swing.JButton btn_volver;
    private javax.swing.JCheckBox chk_cb01;
    private javax.swing.JCheckBox chk_cb02;
    private javax.swing.JCheckBox chk_cb03;
    private javax.swing.JCheckBox chk_cb04;
    private javax.swing.JCheckBox chk_cb05;
    private javax.swing.JCheckBox chk_cb06;
    private javax.swing.JCheckBox chk_cb07;
    private javax.swing.JCheckBox chk_cb08;
    private javax.swing.JCheckBox chk_cb09;
    private javax.swing.JCheckBox chk_cb10;
    private javax.swing.JCheckBox chk_cb11;
    private javax.swing.JLabel img_ssce;
    private javax.swing.JLabel img_warning;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_Pasajeros;
    private javax.swing.JLabel lbl_bitacora;
    private javax.swing.JLabel lbl_direccion;
    private javax.swing.JLabel lbl_filtrar;
    private javax.swing.JLabel lbl_nElevadores;
    private javax.swing.JLabel lbl_nPisos;
    private javax.swing.JLabel lbl_numPasajeros;
    private javax.swing.JLabel lbl_p1;
    private javax.swing.JLabel lbl_p2;
    private javax.swing.JLabel lbl_p3;
    private javax.swing.JLabel lbl_p4;
    private javax.swing.JLabel lbl_p5;
    private javax.swing.JLabel lbl_p6;
    private javax.swing.JLabel lbl_p8;
    private javax.swing.JLabel lbl_pisoActual;
    private javax.swing.JLabel lbl_veocidadA;
    private javax.swing.JLabel lbl_warning;
    private javax.swing.JLabel lbl_welcome;
    private javax.swing.JList<String> lst_Pasajeros;
    private javax.swing.JList<String> lst_bitacora;
    private javax.swing.JScrollPane pnl_Pasajeros;
    private javax.swing.JScrollPane pnl_bitacora;
    private javax.swing.JPanel pnl_config;
    private javax.swing.JScrollPane pnl_configP1;
    private javax.swing.JScrollPane pnl_configP2;
    private javax.swing.JScrollPane pnl_configP3;
    private javax.swing.JScrollPane pnl_configP4;
    private javax.swing.JScrollPane pnl_direccion;
    private javax.swing.JPanel pnl_listaDireccion;
    private javax.swing.JPanel pnl_listaMaxP;
    private javax.swing.JPanel pnl_listaNumPasajeros;
    private javax.swing.JPanel pnl_listaP1;
    private javax.swing.JPanel pnl_listaP2;
    private javax.swing.JPanel pnl_listaP3;
    private javax.swing.JPanel pnl_listaP4;
    private javax.swing.JPanel pnl_listaPisoActual;
    private javax.swing.JPanel pnl_listaPisos;
    private javax.swing.JPanel pnl_listaPuertas;
    private javax.swing.JScrollPane pnl_maxPersonas;
    private javax.swing.JScrollPane pnl_numPasajeros;
    private javax.swing.JScrollPane pnl_pisoActual;
    private javax.swing.JPanel pnl_principal;
    private javax.swing.JScrollPane pnl_scrConfig;
    private javax.swing.JScrollPane pnl_scrPrincipal;
    private javax.swing.JScrollPane pnl_scrSimulacion;
    private javax.swing.JPanel pnl_simulacion;
    private javax.swing.JScrollPane pnl_utPisos;
    private javax.swing.JScrollPane pnl_utPuertas;
    private javax.swing.JSeparator sep_num1;
    private javax.swing.JSpinner spn_nElevadores;
    private javax.swing.JSpinner spn_nPisos;
    private javax.swing.JTextField txt_utContador;
    private javax.swing.JTextField txt_velocidadA;
    // End of variables declaration//GEN-END:variables

    @Override
    public void crearProbabilidad1(int pNumPisos) {
        int contador = 0;
        //Se configura el spinner
        p1Lista.removeAll(p1Lista);
        pnl_listaP1.removeAll();
        Float current = new Float(0.00);
        Float min = new Float(0.00);
        Float max = new Float(1);
        Float step = new Float(0.01);
        pnl_listaP1.setLayout(new BoxLayout(pnl_listaP1, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            p1Lista.add(new JSpinner(new SpinnerNumberModel(current, min, max, step)));
            contador = contador + 1;
        }
        for(int i = 0; i < p1Lista.size(); i++){
            pnl_listaP1.add(new JLabel("Piso "  + (i+1)));
            pnl_listaP1.add(p1Lista.get(i));
            pnl_listaP1.add(new JLabel("   "));
            pnl_listaP1.repaint();
        }
    }
    
    public void configSpinner(JSpinner spin, int max){
        SpinnerNumberModel m_numberSpinnerModel;
        int current = 1;
        int min = 1;
        int step = 1;
        m_numberSpinnerModel = new SpinnerNumberModel(current, min, max, step);
        spin.setModel(m_numberSpinnerModel);
    }

    @Override
    public void crearProbabilidad2(int pNumPisos) {
                int contador = 0;
        //Se configura el spinner
        p2Lista.removeAll(p2Lista);
        pnl_listaP2.removeAll();
        Float current = new Float(0.00);
        Float min = new Float(0.00);
        Float max = new Float(1);
        Float step = new Float(0.01);
        pnl_listaP2.setLayout(new BoxLayout(pnl_listaP2, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            p2Lista.add(new JSpinner(new SpinnerNumberModel(current, min, max, step)));
            contador = contador + 1;
        }
        for(int i = 0; i < p2Lista.size(); i++){
            pnl_listaP2.add(new JLabel("Piso "  + (i+1)));
            pnl_listaP2.add(p2Lista.get(i));
            pnl_listaP2.add(new JLabel("   "));
            pnl_listaP2.repaint();
        }
    }

    @Override
    public void crearProbabilidad3(int pNumPisos) {
        int contador = 0;
        //Se configura el spinner
        p3Lista.removeAll(p3Lista);
        pnl_listaP3.removeAll();
        Float current = new Float(0.00);
        Float min = new Float(0.00);
        Float max = new Float(1);
        Float step = new Float(0.01);
        pnl_listaP3.setLayout(new BoxLayout(pnl_listaP3, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            p3Lista.add(new JSpinner(new SpinnerNumberModel(current, min, max, step)));
            contador = contador + 1;
        }
        for(int i = 0; i < p3Lista.size(); i++){
            pnl_listaP3.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaP3.add(p3Lista.get(i));
            pnl_listaP3.add(new JLabel("   "));
            pnl_listaP3.repaint();
        }
    }

    @Override
    public void crearProbabilidad4(int pNumPisos) {
        int contador = 0;
        //Se configura el spinner
        p4Lista.removeAll(p4Lista);
        pnl_listaP4.removeAll();
        Float current = new Float(0.00);
        Float min = new Float(0.00);
        Float max = new Float(1);
        Float step = new Float(0.01);
        pnl_listaP4.setLayout(new BoxLayout(pnl_listaP4, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            p4Lista.add(new JSpinner(new SpinnerNumberModel(current, min, max, step)));
            contador = contador + 1;
        }
        for(int i = 0; i < p4Lista.size(); i++){
            pnl_listaP4.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaP4.add(p4Lista.get(i));
            pnl_listaP4.add(new JLabel("   "));
            pnl_listaP4.repaint();
        }
    }

    @Override
    public void crearUTPisos(int pNumPisos) {
        int contador = 0;
        //Se configura el spinner
        utPisosLista.removeAll(utPisosLista);
        pnl_listaPisos.removeAll();
        pnl_listaPisos.setLayout(new BoxLayout(pnl_listaPisos, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            utPisosLista.add(new JSpinner(new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1)));
            contador = contador + 1;
        }
        for(int i = 0; i < utPisosLista.size(); i++){
            pnl_listaPisos.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaPisos.add(utPisosLista.get(i));
            pnl_listaPisos.add(new JLabel("   "));
            pnl_listaPisos.repaint();
        }
    }

    @Override
    public void crearUTPuertas(int pNumPisos) {
        int contador = 0;
        //Se configura el spinner
        utPuertasLista.removeAll(utPuertasLista);
        pnl_listaPuertas.removeAll();
        pnl_listaPuertas.setLayout(new BoxLayout(pnl_listaPuertas, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            utPuertasLista.add(new JSpinner(new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1)));
            contador = contador + 1;
        }
        for(int i = 0; i < utPuertasLista.size(); i++){
            pnl_listaPuertas.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaPuertas.add(utPuertasLista.get(i));
            pnl_listaPuertas.add(new JLabel("   "));
            pnl_listaPuertas.repaint();
        }
    }

    @Override
    public void crearMaxPersonas(int pNumPisos) {
        int contador = 0;
        //Se configura el spinner
        maxPersonasLista.removeAll(maxPersonasLista);
        pnl_listaMaxP.removeAll();
        pnl_listaMaxP.setLayout(new BoxLayout(pnl_listaMaxP, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            maxPersonasLista.add(new JSpinner(new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1)));
            contador = contador + 1;
        }
        for(int i = 0; i < maxPersonasLista.size(); i++){
            pnl_listaMaxP.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaMaxP.add(maxPersonasLista.get(i));
            pnl_listaMaxP.add(new JLabel("   "));
            pnl_listaMaxP.repaint();
        }
    }
    
    public void crearPisoActual(int pNumPisos){
        int contador = 0;
        //Se configura el txt
        pisoActualLista.removeAll(pisoActualLista);
        pnl_listaPisoActual.removeAll();
        pnl_listaPisoActual.setLayout(new BoxLayout(pnl_listaPisoActual, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            pisoActualLista.add(new JTextField(20));
            contador = contador + 1;
        }
        for(int i = 0; i < pisoActualLista.size(); i++){
            pisoActualLista.get(i).setEnabled(false);
            pnl_listaPisoActual.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaPisoActual.add(pisoActualLista.get(i));
            pnl_listaPisoActual.add(new JLabel("   "));
            pnl_listaPisoActual.repaint();
        }
    }
    
    
    public boolean validarProbabilidadDestino(){
        int cantPisos = (Integer) spn_nPisos.getValue();
        float probabilidad = 0;

        for(int i = 0; i<cantPisos; i++){
            probabilidad += (Float) p2Lista.get(i).getValue();
        }
        
        if(probabilidad == 1.0){
            return true;
        }
        return false;
    }
    
    
    public void crearNumPersonas(int pNumPisos){
        int contador = 0;
        //Se configura el txt
        numeroPasajerosLista.removeAll(numeroPasajerosLista);
        pnl_listaNumPasajeros.removeAll();
        pnl_listaNumPasajeros.setLayout(new BoxLayout(pnl_listaNumPasajeros, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            numeroPasajerosLista.add(new JTextField(20));
            contador = contador + 1;
        }
        for(int i = 0; i < numeroPasajerosLista.size(); i++){
            numeroPasajerosLista.get(i).setEnabled(false);
            pnl_listaNumPasajeros.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaNumPasajeros.add(numeroPasajerosLista.get(i));
            pnl_listaNumPasajeros.add(new JLabel("   "));
            pnl_listaNumPasajeros.repaint();
        }
    }
    
        public void crearDireccionE(int pNumPisos){
        int contador = 0;
        //Se configura el txt
        direccionesLista.removeAll(direccionesLista);
        pnl_listaDireccion.removeAll();
        pnl_listaDireccion.setLayout(new BoxLayout(pnl_listaDireccion, BoxLayout.PAGE_AXIS));
        
        while(contador < pNumPisos){
            direccionesLista.add(new JTextField(20));
            contador = contador + 1;
        }
        for(int i = 0; i < direccionesLista.size(); i++){
            direccionesLista.get(i).setEnabled(false);
            pnl_listaDireccion.add(new JLabel("Elevador "  + (i+1)));
            pnl_listaDireccion.add(direccionesLista.get(i));
            pnl_listaDireccion.add(new JLabel("   "));
            pnl_listaDireccion.repaint();
        }
    }
    
 
}
